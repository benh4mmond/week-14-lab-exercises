name: npm audit
run-name: ${{ github.actor }} is testing out the code ðŸš€

on:
  pull_request:
  push:
    branches:
      - main
      - 'releases/*'

jobs:
  scan:
    name: npm audit
    runs-on: ubuntu-latest
    steps:
      - name: List files in the repository
        uses: actions/checkout@v3
      - name: Setup node
        uses: actions/setup-node@v3
        with:
          node-version: 16
      - run: |
          cd insecure && ls && npm install && npm audit

  ellint:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - name: Setup node
        uses: actions/setup-node@v3
        with:
          node-version: 16
      - run: ls ${{ github.workspace }}
      - run: cd mashup
      - run: |
          cd mashup && ls && npm install && npm run lint

  tests:
    runs-on: ubuntu-latest
    steps:
      - name: List files in the repository
        uses: actions/checkout@v3
      - run: ls ${{ github.workspace }}
      - run: |
          cd unittesting && ls && npm install && npm ci && npm test


  analyze:
    name: Analyze
    runs-on: ubuntu-latest
    permissions:
      actions: read
      contents: read
      security-events: write

    strategy:
      fail-fast: false
      matrix:
        language: [ 'javascript' ]

    steps:
    - name: Checkout repository
      uses: actions/checkout@v3

    # Initializes the CodeQL tools for scanning.
    - name: Initialize CodeQL
      uses: github/codeql-action/init@v2
      with:
        languages: ${{ matrix.language }}
    - name: Autobuild
      uses: github/codeql-action/autobuild@v2
    - name: Perform CodeQL Analysis
      uses: github/codeql-action/analyze@v2
      with:
        category: "/language:${{matrix.language}}"




# aws stuff might need.
# deploy:
    # needs: [test]
    # runs-on: ubuntu-latest

    # steps:
    # - name: Checkout source code
    #   uses: actions/checkout@v2

    # - name: Generate deployment package
    #   run: zip -r deploy.zip . -x '*.git*'

    # - name: Deploy to EB
    #   uses: einaregilsson/beanstalk-deploy@v20
    #   with:

    # Remember the secrets we embedded? this is how we access them
    #     aws_access_key: ${{ secrets.AWS_ACCESS_KEY_ID }}
    #     aws_secret_key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}

    #     // Replace the values here with your names you submitted in one of
    #     // The previous sections
    #     application_name: django-github-actions-aws
    #     environment_name: django-github-actions-aws

    #     // The version number could be anything. You can find a dynamic way
    #     // Of doing this.
    #     version_label: 12348
    #     region: "us-east-2"
    #     deployment_package: deploy.zip














